@model DancingGoat.Models.Pager.PagerModel
@{
    var ds = Model.DataSource;
    var page = ds.PageIndex + 1;
}


@if ((ds.TotalItemCount > ds.PageSize) && ds.PageSize != 0)
{
    @:<ul class="pager">

    // "Previous" button rendering
    if (page > 1)
    {
        <li><a class="pager-previous" href="@Model.CreateUrlForPageIndex(page - 1)">@ResHelper.GetString("General.Previous")</a></li>
    }

    // Pager items rendering
    for (var i = 1; i <= ds.TotalItemCount; i++)
    {
        <li><a class="@((i == page) ? "pager-active" : "pager-page")" href="@Model.CreateUrlForPageIndex(i)">@i</a></li>

        if ((i * ds.PageSize) >= ds.TotalItemCount)
        {
            break;
        }
    }
    
    
    // "Next" button rendering
    if (page < ((double)ds.TotalItemCount / ds.PageSize))
    {
        <li><a class="pager-next" href="@Model.CreateUrlForPageIndex(page + 1)">@ResHelper.GetString("General.Next")</a></li>
    }

    @:</ul>
}
